{"version":3,"sources":["Components/Registration.js","Components/Citas.js","App.js","index.js"],"names":["Registration","addCitaDesdeForm","useState","mascota","dueño","fecha","hora","sintomas","cita","actualizarCita","addCita","e","target","name","value","error","setError","className","action","onSubmit","key","preventDefault","id","uuidv4","htmlFor","type","placeholder","onChange","rows","Citas","citas","deleteCita","tituloH2","length","map","onClick","App","citasEnLS","JSON","parse","localStorage","getItem","console","log","agregarCita","useEffect","setItem","stringify","citasSinEliminar","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89bb7cb1.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport React, { useState } from 'react'\r\n\r\nimport \"../index.css\"\r\nimport \"./Registration.css\"\r\n\r\n\r\n\r\n\r\nconst Registration = ({addCitaDesdeForm}) => {\r\n\r\n    //State Cita\r\n    const [cita, actualizarCita] = useState({\r\n        mascota: \"\",\r\n        dueño: \"\",\r\n        fecha: \"\",\r\n        hora: \"\",\r\n        sintomas: \"\",\r\n    });\r\n\r\n    const addCita = (e) => {\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const { mascota, dueño, fecha, hora, sintomas } = cita\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        //Valida campos vacios    \r\n        for (const key in cita) {        \r\n            if (cita[key] === \"\") {\r\n                setError(true)\r\n                return //Si hay error aqui termina la funcion onSubmit\r\n            } \r\n        }\r\n\r\n        //Formatea error\r\n        setError(false)\r\n\r\n        //Añade id unico a la cita\r\n        //console.log(\"me ehecuto\");\r\n        cita.id = uuidv4();\r\n        //console.log(cita);\r\n        //console.log(cita.id);\r\n\r\n        actualizarCita({\r\n            ...cita,\r\n            id: cita.id,\r\n        }) \r\n\r\n        //Hasta aqui ya tenemos cita completa, sin datos vacios y con ID\r\n\r\n        //Enviar cita al registro de citas general\r\n        addCitaDesdeForm(cita)\r\n\r\n        //Reiniciar el formulario de cita\r\n        actualizarCita({\r\n            mascota: \"\",\r\n            dueño: \"\",\r\n            fecha: \"\",\r\n            hora: \"\",\r\n            sintomas: \"\",\r\n        }) \r\n\r\n    }\r\n\r\n    //State Error Input Empty\r\n    const [error, setError] = useState(false);\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"registration\">\r\n            <h2>Registro de Pacientes</h2>\r\n\r\n            {\r\n                error? \r\n                \r\n                <p className=\"alerta-error\">Todos los campos deben ser llenados!</p>\r\n\r\n                :\r\n\r\n                \"\"\r\n            }\r\n            \r\n            <form\r\n                action=\"\"\r\n                onSubmit={onSubmit}\r\n            >\r\n\r\n                <label htmlFor=\"mascota\">\r\n                    Nombre de mascota\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    id=\"mascota\"\r\n                    placeholder=\"Laika\"\r\n                    onChange={addCita}\r\n                    value={mascota}\r\n                    className=\"dsd\"\r\n                />\r\n\r\n                <label htmlFor=\"dueño\">\r\n                    Nombre del dueño\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"dueño\"\r\n                    id=\"dueño\"\r\n                    placeholder=\"Cesar\"\r\n                    onChange={addCita}\r\n                    value={dueño}\r\n                    className=\"dsd\"\r\n\r\n                />\r\n\r\n                <label htmlFor=\"fecha\">\r\n                    Dia de la cita\r\n                </label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    id=\"fecha\"\r\n                    onChange={addCita}\r\n                    value={fecha}\r\n                    className=\"dsd\"\r\n\r\n                />\r\n\r\n                <label htmlFor=\"hora\">\r\n                    Hora de la cita\r\n                </label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    id=\"hora\"\r\n                    onChange={addCita}\r\n                    value={hora}\r\n                    className=\"dsd\"\r\n\r\n                />\r\n\r\n                <label htmlFor=\"sintomas\">\r\n                    Sintomas\r\n                </label>\r\n                <textarea\r\n                    name=\"sintomas\"\r\n                    id=\"sintomas\"\r\n                    rows=\"10\"\r\n                    onChange={addCita}\r\n                    value={sintomas}\r\n                    className=\"dsd\"\r\n\r\n                >\r\n                </textarea>\r\n\r\n                <button>Agendar</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;\r\n\r\n","import React, { /*useState*/ } from 'react'\r\n\r\nimport \"./Citas.css\"\r\n\r\n\r\nconst Citas = ({citas, deleteCita}) => {\r\n\r\n    const tituloH2 = citas.length > 0 ? \"Administra tus Citas\":\"Agrega tus Citas\"\r\n\r\n    return (\r\n        <div className=\"citas\">\r\n            <h2>{tituloH2}</h2>\r\n            \r\n\r\n            {citas.map((cita)=>(\r\n                <div key={cita.id} className=\"cita\">\r\n                    <p>Mascota: <span>{cita.mascota}</span></p>\r\n                    <p>Dueño: <span>{cita.dueño}</span></p>\r\n                    <p>Fecha: <span>{cita.fecha}</span></p>\r\n                    <p>Hora: <span>{cita.hora}</span></p>\r\n                    <p>Sintomas: <span>{cita.sintomas}</span></p>\r\n                    <p>Id: <span>{cita.id}</span></p>\r\n\r\n                    <button \r\n                        className=\"button eliminar\"\r\n                        onClick={() => deleteCita(cita.id)}\r\n                    >X</button>\r\n                </div>\r\n            ))}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Citas\r\n\r\n\r\n","import './App.css';\nimport React, { Fragment, useState, useEffect } from 'react'\nimport './index.css';\n\n//Components\nimport Registration from './Components/Registration'\nimport Citas from './Components/Citas'\n\n\n\nfunction App() {\n\n  let citasEnLS = JSON.parse(localStorage.getItem(\"citas\"));\n  console.log(citasEnLS);\n\n  if (!citasEnLS) {\n    citasEnLS = []\n  }\n\n  const [citas, agregarCita] = useState(citasEnLS);\n\n\n  //Funcion que añade cita nueva desde Formulario\n  const addCitaDesdeForm= cita =>{\n    agregarCita([...citas,cita])\n  }\n\n  const deleteCita = (id) =>{\n    console.log(id);\n\n    //Filtrar cita a eliminar\n    const citasSinEliminar = citas.filter(cita => cita.id !== id)\n\n    console.log(`Filtradas`,citasSinEliminar);\n    agregarCita([\n      ...citasSinEliminar\n    ])\n\n  }\n\n  //Use Effect\n  useEffect(()=>{\n    //console.log(\"listo!\");\n    localStorage.setItem(\"citas\", JSON.stringify(citas))\n  },[citas])\n\n\n  return (\n    <Fragment>\n\n    <h1>Citas Medicas</h1>\n    <div className=\"container\">\n      <Registration \n        addCitaDesdeForm={addCitaDesdeForm}\n      />\n      <Citas\n        citas={citas}\n        deleteCita={deleteCita}\n      />\n    </div>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}